{"version":3,"file":"static/js/890.4107e463.chunk.js","mappings":"oNACA,EAA0B,6BAA1B,EAA8D,0BAA9D,EAAqG,gCAArG,EAAqJ,mCAArJ,EAAsM,iCAAtM,EAAqP,iC,SCwCrP,EApCoB,SAAHA,GAAyB,IAAnBC,EAAWD,EAAXC,YACrBC,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAU9B,OARAI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC6D,OAAtDL,EAAaZ,EAAYkB,KAAI,SAACC,GAAG,OAAKC,EAAAA,EAAAA,IAAWD,EAAI,IAACJ,EAAAE,KAAA,GACrCI,EAAAA,EAAAA,IAAsBT,GAAY,KAAD,EAAlDC,EAAQE,EAAAO,KACdhB,EAAaO,GAAU,wBAAAE,EAAAQ,OAAA,GAAAZ,EAAA,IAHzBH,EAKF,GAAG,KAGDgB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,UAC7BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAYC,SACxBtB,EACEuB,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,WAAaD,EAAEC,UAAU,IAC1Cb,KAAI,SAAAc,GAA4B,IAAzBC,EAAKD,EAALC,MAAOF,EAAUC,EAAVD,WACb,OACEG,EAAAA,EAAAA,MAAA,MAAIT,UAAWC,EAAkBC,SAAA,EAC/BO,EAAAA,EAAAA,MAAA,QAAMT,UAAWC,EAAqBC,SAAA,CAAC,YAC3BI,MAEZP,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAmBC,SAAC,OACrCH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAmBC,SAAEM,MALDF,EAQ3C,OAIV,C","sources":["webpack://react-star-wars/./src/components/PersonPage/PersonFilms/PersonFilms.module.css?02f6","components/PersonPage/PersonFilms/PersonFilms.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"PersonFilms_wrapper__I-kYf\",\"list\":\"PersonFilms_list__PNRGk\",\"list__item\":\"PersonFilms_list__item__HAFxt\",\"item__episode\":\"PersonFilms_item__episode__kJGFY\",\"item__colon\":\"PersonFilms_item__colon__-rbL+\",\"item__title\":\"PersonFilms_item__title__75iiB\"};","import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeConcurrentRequest, changeHTTP } from \"@utils/network\";\nimport styles from \"./PersonFilms.module.css\";\n\nconst PersonFilms = ({ personFilms }) => {\n  const [filmsName, setFilmsName] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const filmsHTTPS = personFilms.map((url) => changeHTTP(url));\n      const response = await makeConcurrentRequest(filmsHTTPS);\n      setFilmsName(response);\n    })();\n  }, []);\n\n  return (\n    <div className={styles.wrapper}>\n      <ul className={styles.list}>\n        {filmsName\n          .sort((a, b) => a.episode_id - b.episode_id)\n          .map(({ title, episode_id }) => {\n            return (\n              <li className={styles.list__item} key={episode_id}>\n                <span className={styles.item__episode}>\n                  Episode: {episode_id}\n                </span>\n                <span className={styles.item__colon}>:</span>\n                <span className={styles.item__title}>{title}</span>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nPersonFilms.propTypes = {\n  personFilms: PropTypes.array,\n};\n\nexport default PersonFilms;\n"],"names":["_ref","personFilms","_useState","useState","_useState2","_slicedToArray","filmsName","setFilmsName","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","filmsHTTPS","response","wrap","_context","prev","next","map","url","changeHTTP","makeConcurrentRequest","sent","stop","_jsx","className","styles","children","sort","a","b","episode_id","_ref3","title","_jsxs"],"sourceRoot":""}